{"version":3,"sources":["redux/modules/modules.selector.ts","redux/pokemons/pokemons.selector.ts","redux/pokemons/pokemons.actions.ts","lib/constant.ts","lib/use-fetch.ts","components/fixed-container/fixed-container.component.tsx","components/bottom-nav/bottom-nav.component.tsx","components/top-banner/top-banner.component.tsx","App.tsx","redux/catch/catch.actions.ts","serviceWorker.ts","redux/my-pokemons/my-pokemons.selector.ts","lib/utils.ts","components/type-card/type-card.component.tsx","components/custom-spinner/custom-spinner.component.tsx","components/pokemon-card/pokemon-card.component.tsx","components/pokemon-list/pokemon-list.component.tsx","pages/pokedex-page/pokedex-page.component.tsx","pages/my-pokemon-page/my-pokemon.component.tsx","redux/catch/catch.selector.ts","components/pokemon-banner/pokemon-banner.component.tsx","components/about/about.component.tsx","components/stats/stats.component.tsx","components/evolution/evolution.component.tsx","components/pokemon-data/pokemon-data.component.tsx","components/pokeball/pokeball.component.tsx","redux/my-pokemons/my-pokemons.action.ts","redux/modules/modules.reducer.ts","pages/pokemon-details-page/pokemon-details-page.component.tsx","redux/pokemons/pokemon.utils.ts","redux/pokemons/pokemons.reducer.ts","redux/catch/catch.reducer.ts","redux/my-pokemons/my-pokemons.reducer.ts","redux/root.reducer.ts","redux/store.ts","index.tsx","assets/images/pokeball.svg","assets/images/pokemon.svg"],"names":["selectModules","createSelector","state","module","data","modules","selectPokedex","pokemons","pokemon","pokedex","selectPokemonByName","name","find","poke","addPokemonDetails","type","payload","baseUrl","useFetch","url","options","useState","response","setResponse","undefined","error","setError","fetching","setFetching","useEffect","a","axios","then","res","catch","err","message","fetchData","FixedContainer","children","className","data-test","BottomNav","useSelector","location","useLocation","Container","fluid","Row","main","map","i","Col","xs","key","to","pathname","TopBanner","currentModule","alt","src","require","App","pokedexPokemons","history","useHistory","dispatch","useDispatch","offset","setOffset","pokedexList","length","console","log","results","dt","owned","whenScrolledToBottom","window","innerHeight","scrollY","document","body","offsetHeight","addEventListener","passive","removeEventListener","unlisten","listen","scrollTo","exact","path","render","Component","component","others","Boolean","hostname","match","myPokemonState","myPokemons","selectMyPokemons","selectMyPokemonsByName","fetchPokemonData","Axios","fetchedDetails","fetchedSpecies","evolution_chain","fetchedEvolution","resDetails","resSpecies","resEvolution","details","species","evolution","TypeCard","CustomSpinner","Spinner","animation","role","PokemonCard","pokemonData","pokemonDetails","isCatched","fetchPokemonDetail","PokemonName","nickname","forms","types","order","id","PokemonLists","PokedexPage","Helmet","MyPokemonPage","selectCatch","PokemonBanner","useParams","catchState","catchReady","isCatching","About","pokemonSpecies","flavor_text_entries","flavor_text","Table","borderless","shape","height","Math","floor","weight","abilities","ability","join","gender_rate","egg_groups","egg","Stats","stats","stat","replace","ProgressBar","variant","base_stat","now","Evolution","pokemonEvolution","setEvolution","addToEvolutionArray","evolutionChain","tempEvolution","newObject","sprites","minLevel","evolution_details","min_level","evolves_to","chain","evo","PokemonData","mode","setMode","m","onClick","Pokeball","currentPokemon","modalShow","setModalShow","catchSuccess","setCatchSuccess","setNickname","dispatchStopCatch","setTimeout","random","Modal","centered","show","onHide","Header","closeButton","Title","Body","Form","onSubmit","e","preventDefault","push","Group","Label","FormControl","onChange","target","value","Button","block","INIT_STATE","string","charAt","toUpperCase","slice","moduleReducer","insertPokemonDetails","oldState","incomingDetails","myPokemon","pokemonReducer","action","INITIAL_STATE","catchReducer","myPokemonReducer","persistConfig","storage","whitelist","rootReducer","combineReducers","persistReducer","middlewares","logger","store","createStore","applyMiddleware","persist","persistStore","ReactDOM","persistor","basename","getElementById","navigator","serviceWorker","ready","registration","unregister","exports"],"mappings":"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","file":"static/js/main.4d95cc9d.chunk.js","sourcesContent":["import { RootState } from \"../root.reducer\";\nimport { createSelector } from \"reselect\";\n\nconst moduleState = (state: RootState) => state.module;\n\nexport const selectModules = createSelector([moduleState], (data) => data.modules);\n","import { RootState } from \"../root.reducer\";\nimport { createSelector } from \"reselect\";\n\nconst pokemonState = (state: RootState) => state.pokemons;\n\nexport const selectPokedex = createSelector([pokemonState], (pokemon) => pokemon.pokedex);\n\nexport const selectPokemonByName = (name: string) => {\n  return createSelector([selectPokedex], (pokemon) => pokemon.find((poke) => poke.name === name));\n};\n","import { PokemonList, PokemonActions, PokemonFetchedData } from \"./pokemons\";\n\nexport const appendPokedexList = (data: PokemonList[]): PokemonActions => {\n  const modifiedData = data.map((dt) => ({ ...dt, owned: false }));\n  return {\n    type: \"POKEMON_POKEDEX_APPEND\",\n    payload: modifiedData,\n  };\n};\n\nexport const addPokemonDetails = (data: PokemonFetchedData): PokemonActions => ({\n  type: \"POKEMON_POKEDEX_DETAIL_ADD\",\n  payload: data,\n});\n","export const baseUrl = \"https://pokeapi.co/api/v2\";\n","import { useState, useEffect } from \"react\";\nimport axios, { AxiosRequestConfig, AxiosError } from \"axios\";\n\nconst useFetch = (url: string, options: AxiosRequestConfig = {}) => {\n  const [response, setResponse] = useState<any>(null);\n  const [error, setError] = useState<string | undefined>(undefined);\n  const [fetching, setFetching] = useState(false);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setFetching(true);\n      await axios(url, options)\n        .then((res) => {\n          setResponse(res.data);\n        })\n        .catch((err: AxiosError) => setError(err.message));\n      setFetching(false);\n    };\n    fetchData();\n    //eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [url]);\n  return { response, error, fetching };\n};\n\nexport default useFetch;\n","import React, { ReactNode } from \"react\";\n\nimport \"./fixed-container.style.scss\";\n\ninterface Props {\n  children: ReactNode;\n  className?: string;\n}\n\nconst FixedContainer: React.FC<Props> = ({ children, className }) => {\n  return (\n    <div className={`fixedContainer ${className}`} data-test=\"fixedContainer\">\n      <div className=\"fixedContainer__inner\" data-test=\"fixedContainer__inner\">\n        {children}\n      </div>\n    </div>\n  );\n};\n\nexport default FixedContainer;\n","import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { useSelector } from \"react-redux\";\nimport { useLocation, Link } from \"react-router-dom\";\n\nimport { selectModules } from \"../../redux/modules/modules.selector\";\n\nimport FixedContainer from \"../fixed-container\";\n\nimport \"./bottom-nav.style.scss\";\n\nconst BottomNav: React.FC = () => {\n  const modules = useSelector(selectModules);\n\n  const location = useLocation();\n\n  return (\n    <FixedContainer>\n      <div className=\"bottomNav\" data-test=\"bottomNav\">\n        <Container fluid className=\"bottomNav__inner\">\n          <Row className=\"bottomNav__menu\">\n            {modules.main.map((module, i) => (\n              <Col data-test=\"bottomNav__menuItems\" xs={6} key={i}>\n                <Link\n                  to={module.url}\n                  className={`bottomNav__menuItems ${\n                    location.pathname === module.url ? \"bottomNav__menuItems--selected\" : \"\"\n                  }`}\n                >\n                  {module.name}\n                </Link>\n              </Col>\n            ))}\n          </Row>\n        </Container>\n      </div>\n    </FixedContainer>\n  );\n};\n\nexport default BottomNav;\n","import React from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { Container } from \"react-bootstrap\";\n\nimport { useSelector } from \"react-redux\";\n\nimport { selectModules } from \"../../redux/modules/modules.selector\";\n\nimport \"./top-banner.style.scss\";\n\nconst TopBanner: React.FC = () => {\n  const location = useLocation();\n\n  const modules = useSelector(selectModules);\n  const currentModule = modules.main.find((module) => module.url === location.pathname);\n\n  return (\n    <div className=\"topBanner\" data-test=\"topBanner\">\n      <img\n        className=\"topBanner__backgroundImage\"\n        alt=\"\"\n        src={require(\"../../assets/images/pokemon.svg\")}\n      />\n      <Container>\n        <span className=\"topBanner__title\" data-test=\"topBanner__title\">\n          {currentModule?.name}\n        </span>\n      </Container>\n    </div>\n  );\n};\n\nexport default TopBanner;\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Route, useLocation, useHistory } from \"react-router-dom\";\n\nimport { selectModules } from \"./redux/modules/modules.selector\";\nimport { selectPokedex } from \"./redux/pokemons/pokemons.selector\";\nimport { appendPokedexList } from \"./redux/pokemons/pokemons.actions\";\nimport { stopCatchMode, stopCatching } from \"./redux/catch/catch.actions\";\n// import { selectRootState } from \"./redux/root.selector\";\n\nimport { baseUrl } from \"./lib/constant\";\nimport useFetch from \"./lib/use-fetch\";\n\nimport BottomNav from \"./components/bottom-nav\";\nimport TopBanner from \"./components/top-banner\";\n\n\nimport \"./styles/app.scss\";\n\nfunction App() {\n  // const rootState = useSelector(selectRootState);\n  // console.log(JSON.stringify(rootState));\n\n  const modules = useSelector(selectModules);\n  const pokedexPokemons = useSelector(selectPokedex);\n\n  const history = useHistory();\n\n  const location = useLocation();\n\n  const dispatch = useDispatch();\n\n  const [offset, setOffset] = useState(0);\n\n  const pokedexList = useFetch(`${baseUrl}/pokemon?limit=10&offset=${offset}`);\n\n  const offsetAdd = () => {\n    setOffset(offset + 10);\n  };\n\n  useEffect(() => {\n    if (pokedexPokemons.length < 10 + offset && pokedexList.response) {\n      console.log(\"jalan\");\n      dispatch(appendPokedexList(pokedexList.response.results));\n    }\n\n    //eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [pokedexList.response]);\n\n  useEffect(() => {\n    const whenScrolledToBottom = () => {\n      if (window.innerHeight + window.scrollY >= document.body.offsetHeight - 100) {\n        offsetAdd();\n      }\n    };\n\n    if (!pokedexList.fetching && location.pathname === \"/\") {\n      window.addEventListener(\"scroll\", whenScrolledToBottom, { passive: true });\n    }\n\n    return () => window.removeEventListener(\"scroll\", whenScrolledToBottom);\n  });\n\n  useEffect(() => {\n    const unlisten = history.listen(() => {\n      window.scrollTo(0, 0);\n    });\n    return () => {\n      unlisten();\n    };\n    //eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    dispatch(stopCatchMode());\n    dispatch(stopCatching());\n    //eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [location]);\n\n  return (\n    <div className=\"App\">\n      <Route exact path={modules.main.map((module) => module.url)}>\n        <TopBanner />\n        {modules.main.map((module, i) => (\n          <Route\n            key={i}\n            exact\n            path={module.url}\n            render={() => {\n              const Component = module.component;\n              return <Component />;\n            }}\n          />\n        ))}\n      </Route>\n      {modules.others.map((module, i) => (\n        <Route\n          key={i}\n          path={module.url}\n          render={() => {\n            const Component = module.component;\n            return <Component />;\n          }}\n        />\n      ))}\n      <BottomNav />\n    </div>\n  );\n}\n\nexport default App;\n","import { CatchActions } from \"./catch\";\n\nexport const beginCatchMode = (): CatchActions => ({\n  type: \"SET_CATCH_MODE\",\n});\n\nexport const stopCatchMode = (): CatchActions => ({\n  type: \"QUIT_CATCH_MODE\",\n});\n\nexport const beginCatching = (): CatchActions => ({\n  type: \"CATCH_START\",\n});\n\nexport const stopCatching = (): CatchActions => ({\n  type: \"CATCH_END\",\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { RootState } from \"../root.reducer\";\nimport { createSelector } from \"reselect\";\n\nconst myPokemonState = (state: RootState) => state.myPokemons;\n\nexport const selectMyPokemons = createSelector([myPokemonState], (data) => data.myPokemons);\n\nexport const selectMyPokemonsByName = (name: string) => {\n  return createSelector([myPokemonState], (data) => data.myPokemons.find((dt) => dt.name === name));\n};\n","import Axios from \"axios\";\nimport { baseUrl } from \"./constant\";\n\nexport const fetchPokemonData = async (name: string) => {\n  const fetchedDetails = await Axios(`${baseUrl}/pokemon/${name}`);\n  const fetchedSpecies = await Axios(`${baseUrl}/pokemon-species/${name}`);\n  const fetchedEvolution = await Axios(fetchedSpecies.data.evolution_chain.url);\n\n  const resDetails = fetchedDetails.data;\n  const resSpecies = fetchedSpecies.data;\n  const resEvolution = fetchedEvolution.data;\n\n  return { details: resDetails, species: resSpecies, evolution: resEvolution };\n};\n\nexport const capitalizeFirstLetter = (string: string) => {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n};\n","import React from \"react\";\n\nimport \"./type-card.style.scss\";\n\ninterface Props {\n  type: string;\n}\n\nconst TypeCard: React.FC<Props> = ({ type }) => {\n  return (\n    <div data-test=\"typeCard\" className={`typeCard bg-${type}`}>\n      {type}\n    </div>\n  );\n};\n\nexport default TypeCard;\n","import React from \"react\";\nimport { Spinner } from \"react-bootstrap\";\n\nimport \"./custom-spinner.style.scss\";\n\nconst CustomSpinner: React.FC = () => {\n  return (\n    <div className=\"customSpinner\" data-test=\"customSpinner\">\n      <Spinner animation=\"border\" role=\"status\">\n        <span className=\"sr-only\">Loading...</span>\n      </Spinner>\n    </div>\n  );\n};\n\nexport default CustomSpinner;\n","import React, { useEffect, Fragment } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport { selectPokemonByName } from \"../../redux/pokemons/pokemons.selector\";\nimport { selectMyPokemonsByName } from \"../../redux/my-pokemons/my-pokemons.selector\";\nimport { addPokemonDetails } from \"../../redux/pokemons/pokemons.actions\";\nimport { MyPokemons } from \"../../redux/my-pokemons/my-pokemons\";\n\nimport { fetchPokemonData } from \"../../lib/utils\";\n\nimport TypeCard from \"../type-card\";\nimport CustomSpinner from \"../custom-spinner\";\n\nimport \"./pokemon-card.style.scss\";\n\ninterface Props {\n  pokemonData: MyPokemons;\n}\n\nconst PokemonCard: React.FC<Props> = ({ pokemonData }) => {\n  const pokemon = useSelector(selectPokemonByName(pokemonData.name));\n\n  const pokemonDetails = pokemon?.details;\n\n  const dispatch = useDispatch();\n\n  const { pathname } = useLocation();\n\n  const isCatched = useSelector(selectMyPokemonsByName(pokemonData.name));\n\n  useEffect(() => {\n    const fetchPokemonDetail = async () => {\n      const res = await fetchPokemonData(pokemonData.name);\n      dispatch(addPokemonDetails(res));\n    };\n    if (!pokemonDetails) {\n      fetchPokemonDetail();\n    }\n    //eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const PokemonName = () => {\n    return (\n      <span className=\"pokemonCard__name\" data-test=\"pokemonCard__name\">\n        {pathname === \"/my-pokemons\" ? pokemonData.nickname : pokemonDetails?.forms[0].name}\n        {pathname !== \"/my-pokemons\" && isCatched ? (\n          <img\n            className=\"pokemonCard__isOwned\"\n            alt=\"\"\n            src={require(\"../../assets/images/pokeball.svg\")}\n          />\n        ) : (\n          \"\"\n        )}\n      </span>\n    );\n  };\n\n  return (\n    <Link\n      to={`/details/${pokemonDetails && pokemonDetails?.name}`}\n      data-test=\"pokemonCard\"\n      className={`pokemonCard ${\n        pokemonDetails ? \"bg-\" + pokemonDetails.types[0].type.name + \"-light\" : \"\"\n      }`}\n    >\n      {pokemonDetails ? (\n        <Fragment>\n          <div className=\"pokemonCard__details\">\n            <span className=\"pokemonCard__orderNumber\">#{pokemonDetails?.order}</span>\n            <PokemonName />\n            <div className=\"pokemonCard__types\">\n              {pokemonDetails?.types.map((type, i) => (\n                <TypeCard key={i} type={type.type.name} />\n              ))}\n            </div>\n          </div>\n          <div className=\"pokemonCard__sprite\">\n            <img\n              className=\"pokemonCard__pokemonSprite\"\n              alt=\"\"\n              src={`https://pokeres.bastionbot.org/images/pokemon/${pokemonDetails?.id}.png`}\n            ></img>\n            <img\n              className=\"pokemonCard__backgroundImage\"\n              alt=\"\"\n              src={require(\"../../assets/images/pokemon.svg\")}\n            />\n          </div>\n        </Fragment>\n      ) : (\n        <CustomSpinner />\n      )}\n    </Link>\n  );\n};\n\nexport default PokemonCard;\n","import React from \"react\";\nimport { Row, Col } from \"react-bootstrap\";\n\nimport { MyPokemons } from \"../../redux/my-pokemons/my-pokemons\";\n\nimport PokemonCard from \"../pokemon-card\";\n\nimport \"./pokemon-list.style.scss\";\n\ninterface Props {\n  pokemons: MyPokemons[];\n}\n\nconst PokemonLists: React.FC<Props> = ({ pokemons }) => {\n  return (\n    <div className=\"pokemonList\" data-test=\"pokemonList\">\n      <Row>\n        {pokemons.map((pokemon, i) => (\n          <Col xs={12} key={i}>\n            <PokemonCard pokemonData={pokemon} />\n          </Col>\n        ))}\n      </Row>\n    </div>\n  );\n};\n\nexport default PokemonLists;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Container } from \"react-bootstrap\";\nimport { Helmet } from \"react-helmet\";\n\nimport { selectPokedex } from \"../../redux/pokemons/pokemons.selector\";\n\nimport PokemonList from \"../../components/pokemon-list\";\n\nimport \"./pokedex-page.style.scss\";\n\nconst PokedexPage: React.FC = () => {\n  const pokedexPokemons = useSelector(selectPokedex);\n\n  return (\n    <section className=\"pokedex\">\n      <Helmet>\n        <title>Pokèdex</title>\n      </Helmet>\n      <Container>\n        <PokemonList pokemons={pokedexPokemons} />\n      </Container>\n    </section>\n  );\n};\n\nexport default PokedexPage;\n","import React from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { Container } from \"react-bootstrap\";\nimport { useSelector } from \"react-redux\";\n\nimport { selectMyPokemons } from \"../../redux/my-pokemons/my-pokemons.selector\";\n\nimport PokemonLists from \"../../components/pokemon-list\";\n\nconst MyPokemonPage: React.FC = () => {\n  const myPokemons = useSelector(selectMyPokemons);\n  return (\n    <div className=\"myPokemon\">\n      <Helmet>\n        <title>My Pokèmons</title>\n      </Helmet>\n      <Container>\n        <PokemonLists pokemons={myPokemons} />\n      </Container>\n    </div>\n  );\n};\n\nexport default MyPokemonPage;\n","import { RootState } from \"../root.reducer\";\nimport { createSelector } from \"reselect\";\n\nconst catchState = (state: RootState) => state.catch;\n\nexport const selectCatch = createSelector([catchState], (data) => data);\n","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\n\nimport { selectPokemonByName } from \"../../redux/pokemons/pokemons.selector\";\nimport { selectCatch } from \"../../redux/catch/catch.selector\";\nimport { selectMyPokemonsByName } from \"../../redux/my-pokemons/my-pokemons.selector\";\n\nimport TypeCard from \"../type-card\";\n\nimport \"./pokemon-banner.style.scss\";\n\ninterface Props {\n  className?: string;\n}\n\nconst PokemonBanner: React.FC<Props> = ({ className }) => {\n  const { name } = useParams();\n  const pokemon = useSelector(selectPokemonByName(name));\n\n  const isCatched = useSelector(selectMyPokemonsByName(name));\n\n  const catchState = useSelector(selectCatch);\n\n  const pokemonDetails = pokemon?.details;\n\n  return (\n    <div\n      className={`pokemonBanner ${catchState.catchReady && \"pokemonBanner--catchMode\"} bg-${\n        pokemonDetails?.types[0].type.name\n      }-light`}\n      data-test=\"pokemonBanner\"\n    >\n      <div className=\"pokemonBanner__imageContainer\">\n        {pokemonDetails && (\n          <img\n            className={`pokemonBanner__image ${\n              catchState.isCatching && \"pokemonBanner__image--catching\"\n            }`}\n            alt=\"\"\n            src={`https://pokeres.bastionbot.org/images/pokemon/${pokemonDetails?.id}.png`}\n          />\n        )}\n        <div\n          className={`pokemonBanner__pokeballContainer ${\n            catchState.catchReady && \"pokemonBanner__pokeballContainer--catching\"\n          }`}\n        >\n          {catchState.catchReady && (\n            <img\n              className={`pokemonBanner__pokeballImage ${\n                catchState.isCatching && \"pokemonBanner__pokeballImage--catching\"\n              }`}\n              alt=\"\"\n              src={require(\"../../assets/images/pokeball.svg\")}\n            />\n          )}\n        </div>\n      </div>\n\n      <span className=\"pokemonBanner__orderNumber\" data-test=\"pokemonBanner__orderNumber\">\n        #{pokemonDetails?.order}\n      </span>\n      <span className=\"pokemonBanner__name\" data-test=\"pokemonBanner__name\">\n        {isCatched && (\n          <img\n            className=\"pokemonBanner__isOwned\"\n            alt=\"\"\n            src={require(\"../../assets/images/pokeball.svg\")}\n          />\n        )}\n        {pokemonDetails?.name}\n      </span>\n      <div className=\"pokemonBanner__types\">\n        {pokemonDetails?.types.map((type, i) => (\n          <TypeCard key={i} type={type.type.name} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default PokemonBanner;\n","import React, { Fragment } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Table } from \"react-bootstrap\";\nimport { useParams } from \"react-router-dom\";\nimport { BiFemaleSign, BiMaleSign } from \"react-icons/bi\";\n\nimport { selectPokemonByName } from \"../../redux/pokemons/pokemons.selector\";\n\nimport \"./about.style.scss\";\n\nconst About: React.FC = () => {\n  const { name } = useParams();\n  const pokemon = useSelector(selectPokemonByName(name));\n\n  const pokemonSpecies = pokemon?.species;\n  const pokemonDetails = pokemon?.details;\n\n  return (\n    <div className=\"about\" data-test=\"about\">\n      <span className=\"about__description\">\n        \"{pokemonSpecies?.flavor_text_entries[0].flavor_text}\"\n      </span>\n\n      <Table className=\"about__table\" borderless>\n        <tbody>\n          <tr>\n            <td className=\"about__dataName\">Shape</td>\n            <td className=\"about__dataDescription\" data-test='about__shape'>{pokemonSpecies?.shape.name}</td>\n          </tr>\n          <tr>\n            <td className=\"about__dataName\">Height</td>\n            <td className=\"about__dataDescription\">\n              {pokemonDetails && pokemonDetails?.height * 2.54} cm\n            </td>\n          </tr>\n          <tr>\n            <td className=\"about__dataName\">Weight</td>\n            <td className=\"about__dataDescription\">\n              {pokemonDetails && Math.floor(pokemonDetails?.weight * 0.453592)} kg\n            </td>\n          </tr>\n          <tr>\n            <td className=\"about__dataName\">Abilities</td>\n            <td className=\"about__dataDescription\">\n              {pokemonDetails?.abilities.map((ability) => ability.ability.name).join(\", \")}\n            </td>\n          </tr>\n        </tbody>\n      </Table>\n\n      <span className=\"about__header\">Breeding</span>\n\n      <Table className=\"about__table\" borderless>\n        <tbody>\n          <tr>\n            <td className=\"about__dataName\">Gender</td>\n            <td className=\"about__dataDescription\">\n              {pokemonSpecies && (\n                <Fragment>\n                  {(pokemonSpecies?.gender_rate / 8) * 100 + \"%\"}\n                  <BiFemaleSign className=\"text-psychic\" />\n                  {\", \"}\n                  {((8 - pokemonSpecies?.gender_rate) / 8) * 100 + \"%\"}\n                  <BiMaleSign className=\"text-water\" />\n                </Fragment>\n              )}\n            </td>\n          </tr>\n          <tr>\n            <td className=\"about__dataName\">Egg Group</td>\n            <td className=\"about__dataDescription\">\n              {pokemonSpecies?.egg_groups.map((egg) => egg.name).join(\", \")}\n            </td>\n          </tr>\n        </tbody>\n      </Table>\n    </div>\n  );\n};\n\nexport default About;\n","import React, { Fragment } from \"react\";\nimport { Row, Col, ProgressBar } from \"react-bootstrap\";\nimport { useParams } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\n\nimport { selectPokemonByName } from \"../../redux/pokemons/pokemons.selector\";\n\nimport \"./stats.style.scss\";\n\nconst Stats: React.FC = () => {\n  const { name } = useParams();\n\n  const pokemon = useSelector(selectPokemonByName(name));\n  const pokemonDetails = pokemon?.details;\n\n  return (\n    <div className=\"stats\" data-test=\"stats\">\n      <Row className=\"stats__inner\">\n        {pokemonDetails?.stats.map((stat, i) => (\n          <Fragment key={i}>\n            <Col className=\"stats__name\" xs={4}>\n              {stat.stat.name.replace(\"special\", \"sp\").replace(\"-\", \". \")}\n            </Col>\n            <Col className=\"stats__name\" xs={8}>\n              <ProgressBar\n                variant={stat.base_stat < 50 ? \"primary\" : \"water\"}\n                now={stat.base_stat}\n              />\n            </Col>\n          </Fragment>\n        ))}\n      </Row>\n    </div>\n  );\n};\n\nexport default Stats;\n","import React, { useEffect, useState } from \"react\";\nimport { AiOutlineArrowDown } from \"react-icons/ai\";\nimport Axios from \"axios\";\nimport { useSelector } from \"react-redux\";\nimport { useParams, Link } from \"react-router-dom\";\n\nimport { selectPokemonByName } from \"../../redux/pokemons/pokemons.selector\";\nimport { EvolutionChain, PokemonEvolutionNew } from \"../../redux/pokemons/pokemons\";\n\nimport { baseUrl } from \"../../lib/constant\";\n\nimport \"./evolution.style.scss\";\n\nconst Evolution: React.FC = () => {\n  const { name } = useParams();\n\n  const pokemon = useSelector(selectPokemonByName(name));\n  const pokemonEvolution = pokemon?.evolution;\n\n  const [evolution, setEvolution] = useState<PokemonEvolutionNew[]>([]);\n\n  const addToEvolutionArray = (\n    evolutionChain: EvolutionChain,\n    tempEvolution: PokemonEvolutionNew[] = []\n  ) => {\n    Axios(`${baseUrl}/pokemon/${evolutionChain.species.name}`).then((res) => {\n      const newObject = {\n        name: evolutionChain.species.name,\n        sprites: `https://pokeres.bastionbot.org/images/pokemon/${res.data.id}.png`,\n        url: `/details/${evolutionChain.species.name}`,\n        minLevel: evolutionChain.evolution_details[0]?.min_level,\n      };\n\n      tempEvolution = [...tempEvolution, newObject];\n\n      if (evolutionChain.evolves_to.length > 0) {\n        addToEvolutionArray(evolutionChain.evolves_to[0], tempEvolution);\n      } else {\n        setEvolution(tempEvolution);\n      }\n    });\n  };\n\n  useEffect(() => {\n    if (pokemonEvolution) {\n      addToEvolutionArray(pokemonEvolution?.chain);\n    }\n    //eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [pokemonEvolution]);\n\n  return (\n    <div className=\"evolution\" data-test=\"evolution\">\n      {evolution?.map((evo, i) => (\n        <Link to={evo.url} key={i} className=\"evolution__pokemon\">\n          {i > 0 && (\n            <div className=\"evolution__arrow\">\n              <AiOutlineArrowDown />\n            </div>\n          )}\n          <div className=\"evolution__imageContainer\">\n            <img\n              alt=\"\"\n              className={`evolution__spritesBackground ${\n                evo.name === name && \"evolution__spritesBackground--current\"\n              }`}\n              src={require(\"../../assets/images/pokemon.svg\")}\n            />\n            <img className=\"evolution__pokemonSprites\" src={evo.sprites} alt=\"\" />\n          </div>\n          <span className=\"evolution__level\">Level {evo.minLevel ? evo.minLevel : \"1\"}</span>\n          <div className=\"evolution__pokemonName\">{evo.name}</div>\n        </Link>\n      ))}\n    </div>\n  );\n};\n\nexport default Evolution;\n","import React, { useState, useEffect } from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport { useParams } from \"react-router-dom\";\n\nimport About from \"../about\";\nimport Stats from \"../stats\";\n\nimport Evolution from \"../evolution\";\n\nimport \"./pokemon-data.style.scss\";\n\nconst PokemonData: React.FC = () => {\n  const { name } = useParams();\n\n  const [mode, setMode] = useState(\"about\");\n  const modes = [\"about\", \"stats\", \"evolution\"];\n\n  useEffect(() => {\n    setMode(\"about\");\n  }, [name]);\n\n  return (\n    <div className=\"pokemonData\" data-test=\"pokemonData\">\n      <Container>\n        <div className=\"pokemonData__nav\">\n          {modes.map((m, i) => (\n            <span\n              key={i}\n              onClick={() => setMode(m)}\n              className={`pokemonData__navItem ${\n                m === mode ? \"pokemonData__navItem--selected\" : \"\"\n              }`}\n            >\n              {m}\n            </span>\n          ))}\n        </div>\n        <div className=\"pokemonData__mainContent\">\n          {(() => {\n            switch (mode) {\n              case \"about\":\n                return <About />;\n              case \"stats\":\n                return <Stats />;\n              case \"evolution\":\n                return <Evolution />;\n              default:\n            }\n          })()}\n        </div>\n      </Container>\n    </div>\n  );\n};\n\nexport default PokemonData;\n","import React, { useEffect, Fragment, useState } from \"react\";\nimport { Modal, Form, FormControl, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory, useParams } from \"react-router-dom\";\n\nimport { selectCatch } from \"../../redux/catch/catch.selector\";\nimport { selectPokemonByName } from \"../../redux/pokemons/pokemons.selector\";\nimport {\n  beginCatchMode,\n  beginCatching,\n  stopCatching,\n  stopCatchMode,\n} from \"../../redux/catch/catch.actions\";\nimport { appendMyPokemonList } from \"../../redux/my-pokemons/my-pokemons.action\";\n\nimport FixedContainer from \"../fixed-container\";\n\nimport \"./pokeball.style.scss\";\n\nconst Pokeball: React.FC = () => {\n  const dispatch = useDispatch();\n\n  const catchState = useSelector(selectCatch);\n\n  const history = useHistory();\n\n  const { name } = useParams();\n\n  const currentPokemon = useSelector(selectPokemonByName(name));\n\n  const [modalShow, setModalShow] = useState<boolean>(false);\n  const [catchSuccess, setCatchSuccess] = useState<boolean>(false);\n  const [nickname, setNickname] = useState<string>(\"\");\n\n  const dispatchStartCatch = () => {\n    dispatch(beginCatchMode());\n    dispatch(beginCatching());\n  };\n\n  const dispatchStopCatch = () => {\n    dispatch(stopCatchMode());\n    dispatch(stopCatching());\n  };\n\n  const initiateCatch = () => {\n    if (!catchState.catchReady) {\n      dispatchStartCatch();\n    }\n  };\n\n  const addMyPokemon = (e: React.FormEvent) => {\n    if (currentPokemon) {\n      e.preventDefault();\n      dispatch(\n        appendMyPokemonList({\n          nickname: nickname,\n          name: currentPokemon?.name,\n          url: currentPokemon?.url,\n        })\n      );\n      history.push(\"/my-pokemons\");\n    }\n  };\n\n  useEffect(() => {\n    if (catchState.isCatching) {\n      setTimeout(() => {\n        const catchRating = Math.floor(Math.random() * 101);\n        if (catchRating < 50) {\n          dispatchStopCatch();\n          setModalShow(true);\n        } else {\n          dispatch(stopCatching());\n          setCatchSuccess(true);\n          setModalShow(true);\n        }\n      }, 3000);\n    }\n    //eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [catchState.isCatching]);\n\n  return (\n    <FixedContainer>\n      <div\n        onClick={initiateCatch}\n        className={`pokeball ${catchState.catchReady && \"pokeball--hidden\"}`}\n        data-test=\"pokeball\"\n      >\n        <div className=\"pokeball__imageContainer\">\n          <img\n            className=\"pokeball__image\"\n            alt=\"\"\n            src={require(\"../../assets/images/pokeball.svg\")}\n          />\n          <div className={`pokeball__catch ${catchState.catchReady && \"pokeball__catch--hidden\"}`}>\n            <div className=\"pokeball__catchText\">Catch!</div>\n          </div>\n        </div>\n      </div>\n      <Modal\n        centered\n        show={modalShow}\n        onHide={() => {\n          setModalShow(false);\n          dispatchStopCatch();\n        }}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>\n            {catchSuccess === false ? \"The Pokèmon got away!\" : \"You got the Pokèmon!!\"}\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          {catchSuccess === false ? (\n            \"Don't give up, Trainer. You can try again!\"\n          ) : (\n            <Fragment>\n              <Form onSubmit={addMyPokemon}>\n                <Form.Group>\n                  <Form.Label>Give a nickname to your new friend!</Form.Label>\n                  <FormControl onChange={(e) => setNickname(e.target.value)} />\n                </Form.Group>\n                <Form.Group>\n                  <Button block type=\"submit\">\n                    Submit\n                  </Button>\n                </Form.Group>\n              </Form>\n            </Fragment>\n          )}\n        </Modal.Body>\n      </Modal>\n    </FixedContainer>\n  );\n};\n\nexport default Pokeball;\n","import { MyPokemonsActions, MyPokemons } from \"./my-pokemons\";\n\nexport const appendMyPokemonList = (data: MyPokemons): MyPokemonsActions => ({\n  type: \"POKEMON_MYPOKEMON_APPEND\",\n  payload: data,\n});\n","import PokedexPage from \"../../pages/pokedex-page\";\nimport MyPokemonPage from \"../../pages/my-pokemon-page\";\nimport PokemonDetailsPage from \"../../pages/pokemon-details-page\";\n\nexport const INIT_STATE: ModulesState = {\n  modules: {\n    main: [\n      {\n        name: \"Pokèdex\",\n        url: \"/\",\n        component: PokedexPage,\n      },\n      {\n        name: \"My Pokèmons\",\n        url: \"/my-pokemons\",\n        component: MyPokemonPage,\n      },\n    ],\n    others: [\n      {\n        name: \"Pokèmon Details\",\n        url: \"/details/:name\",\n        component: PokemonDetailsPage,\n      },\n    ],\n  },\n};\n\nconst moduleReducer = (state = INIT_STATE) => {\n  return state;\n};\n\nexport default moduleReducer;\n","import React, { useEffect, Fragment } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { Helmet } from \"react-helmet\";\n\nimport { selectPokemonByName } from \"../../redux/pokemons/pokemons.selector\";\nimport { selectMyPokemonsByName } from \"../../redux/my-pokemons/my-pokemons.selector\";\nimport { selectCatch } from \"../../redux/catch/catch.selector\";\nimport { addPokemonDetails } from \"../../redux/pokemons/pokemons.actions\";\n\nimport { fetchPokemonData, capitalizeFirstLetter } from \"../../lib/utils\";\n\nimport CustomSpinner from \"../../components/custom-spinner\";\nimport PokemonBanner from \"../../components/pokemon-banner\";\nimport PokemonData from \"../../components/pokemon-data\";\n\nimport Pokeball from \"../../components/pokeball\";\n\nimport \"./pokemon-details-page.style.scss\";\n\nconst PokemonDetailsPage: React.FC = () => {\n  const dispatch = useDispatch();\n  const { name } = useParams();\n\n  const pokemonDetails = useSelector(selectPokemonByName(name));\n\n  const isCatched = useSelector(selectMyPokemonsByName(name));\n\n  const catchState = useSelector(selectCatch);\n\n  useEffect(() => {\n    const fetchPokemonDetail = async () => {\n      const res = await fetchPokemonData(name);\n      dispatch(addPokemonDetails(res));\n    };\n\n    if (!pokemonDetails?.details || !pokemonDetails?.species) {\n      fetchPokemonDetail();\n    }\n\n    //eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [name]);\n\n  return (\n    <div className=\"pokemonDetailsPage\">\n      <Helmet>\n        <title>{capitalizeFirstLetter(name)} &ndash; Pokèdex</title>\n      </Helmet>\n      {pokemonDetails ? (\n        <Fragment>\n          <PokemonBanner />\n          {!isCatched && <Pokeball />}\n          {!catchState.catchReady && <PokemonData />}\n        </Fragment>\n      ) : (\n        <CustomSpinner />\n      )}\n    </div>\n  );\n};\n\nexport default PokemonDetailsPage;\n","import { PokemonList, PokemonFetchedData } from \"./pokemons\";\nimport { baseUrl } from \"../../lib/constant\";\n\nexport const insertPokemonDetails = (\n  oldState: PokemonList[],\n  incomingDetails: PokemonFetchedData\n): PokemonList[] => {\n  const isExist = oldState.find((pokemon) => pokemon.name === incomingDetails.details.name);\n\n  if (isExist) {\n    return oldState.map((pokemon) => {\n      if (incomingDetails.details.name === pokemon.name) {\n        return { ...pokemon, ...incomingDetails };\n      } else return pokemon;\n    });\n  } else {\n    return [\n      ...oldState,\n      {\n        name: incomingDetails.details.name,\n        url: `${baseUrl}/pokemon/${incomingDetails.details.name}`,\n        ...incomingDetails,\n      },\n    ];\n  }\n};\n","import { PokemonActions, PokemonState } from \"./pokemons\";\nimport { insertPokemonDetails } from \"./pokemon.utils\";\n\nconst INIT_STATE: PokemonState = {\n  pokedex: [],\n  myPokemon: [],\n};\n\nconst pokemonReducer = (state = INIT_STATE, action: PokemonActions): PokemonState => {\n  switch (action.type) {\n    case \"POKEMON_POKEDEX_APPEND\":\n      return {\n        ...state,\n        pokedex: [...state.pokedex, ...action.payload],\n      };\n    case \"POKEMON_POKEDEX_DETAIL_ADD\":\n      return {\n        ...state,\n        pokedex: insertPokemonDetails(state.pokedex, action.payload),\n      };\n    default:\n      return state;\n  }\n};\n\nexport default pokemonReducer;\n","import { CatchActions, CatchState } from \"./catch\";\n\nconst INITIAL_STATE = {\n  isCatching: false,\n  catchReady: false,\n};\n\nconst catchReducer = (state = INITIAL_STATE, action: CatchActions): CatchState => {\n  switch (action.type) {\n    case \"CATCH_START\":\n      return {\n        ...state,\n        isCatching: true,\n      };\n    case \"CATCH_END\":\n      return {\n        ...state,\n        isCatching: false,\n      };\n    case \"SET_CATCH_MODE\":\n      return {\n        ...state,\n        catchReady: true,\n      };\n    case \"QUIT_CATCH_MODE\":\n      return {\n        ...state,\n        catchReady: false,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default catchReducer;\n","import { MyPokemonState, MyPokemonsActions } from \"./my-pokemons\";\n\nconst INIT_STATE: MyPokemonState = {\n  myPokemons: [],\n};\n\nconst myPokemonReducer = (state = INIT_STATE, action: MyPokemonsActions): MyPokemonState => {\n  switch (action.type) {\n    case \"POKEMON_MYPOKEMON_APPEND\":\n      return {\n        ...state,\n        myPokemons: [...state.myPokemons, action.payload],\n      };\n    default:\n      return state;\n  }\n};\n\nexport default myPokemonReducer;\n","import { combineReducers } from \"redux\";\nimport storage from \"redux-persist/lib/storage\";\n\nimport moduleReducer from \"./modules/modules.reducer\";\nimport pokemonReducer from \"./pokemons/pokemons.reducer\";\nimport catchReducer from \"./catch/catch.reducer\";\nimport { persistReducer } from \"redux-persist\";\nimport myPokemonReducer from \"./my-pokemons/my-pokemons.reducer\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  whitelist: [\"myPokemons\"],\n};\n\nconst rootReducer = combineReducers({\n  module: moduleReducer,\n  pokemons: pokemonReducer,\n  catch: catchReducer,\n  myPokemons: myPokemonReducer,\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\nexport default persistReducer(persistConfig, rootReducer);\n","import logger from \"redux-logger\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport rootReducer from \"./root.reducer\";\nimport { persistStore } from \"redux-persist\";\n\nconst middlewares = [];\n\nif (process.env.NODE_ENV !== \"test\") {\n  middlewares.push(logger);\n}\n\nconst store = createStore(rootReducer, applyMiddleware(...middlewares));\n\nexport const persist = persistStore(store);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\n\nimport store, { persist } from \"./redux/store\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate persistor={persist}>\n      <BrowserRouter basename=\"/tokped-pokedex\">\n        <App />\n      </BrowserRouter>\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/pokeball.6b4ffa55.svg\";","module.exports = __webpack_public_path__ + \"static/media/pokemon.254d58d1.svg\";"],"sourceRoot":""}